{"openapi": "3.1.0", "info": {"title": "Library Management System", "description": "API for managing NUS Tembusu College Reading Room operations", "version": "1.0.0"}, "paths": {"/api/v1/book/": {"get": {"tags": ["Books"], "summary": "Get Books", "description": "Retrieve books with optional filters.\nReturns detailed book information including author name, publisher name, etc.", "operationId": "get_books_api_v1_book__get", "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0}, {"type": "null"}], "description": "Maximum number of books to return", "default": 20, "title": "Limit"}, "description": "Maximum number of books to return"}, {"name": "title", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by book title", "title": "Title"}, "description": "Filter by book title"}, {"name": "author_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by author name", "title": "Author Name"}, "description": "Filter by author name"}, {"name": "publisher_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by publisher name", "title": "Publisher Name"}, "description": "Filter by publisher name"}, {"name": "category_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by category name", "title": "Category Name"}, "description": "Filter by category name"}, {"name": "language_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by language", "title": "Language Name"}, "description": "Filter by language"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookDetail"}, "title": "Response Get Books Api V1 Book  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Books"], "summary": "Create Book", "operationId": "create_book_api_v1_book__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/{book_id}": {"delete": {"tags": ["Books"], "summary": "Delete Book", "description": "Delete a book (only if it has no copies).\n\n- **book_id**: Book ID", "operationId": "delete_book_api_v1_book__book_id__delete", "parameters": [{"name": "book_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Books"], "summary": "Partial Update Book", "description": "Partially update a book's information.\n\n- **book_id**: Book ID\n- **book_in**: Updated book data (only include fields that need to be updated)", "operationId": "partial_update_book_api_v1_book__book_id__patch", "parameters": [{"name": "book_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book ID", "description": "ID of the book to update"}, "description": "ID of the book to update"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/isbn/{isbn}": {"get": {"tags": ["Books"], "summary": "Get Book By Isbn", "description": "Get a book by ISBN.\n\n- **isbn**: ISBN number", "operationId": "get_book_by_isbn_api_v1_book_search_isbn__isbn__get", "parameters": [{"name": "isbn", "in": "path", "required": true, "schema": {"type": "string", "title": "Isbn"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/call-number/{call_number}": {"get": {"tags": ["Books"], "summary": "Get Book By Call Number", "description": "Get a book by call number.\n\n- **call_number**: Call number", "operationId": "get_book_by_call_number_api_v1_book_search_call_number__call_number__get", "parameters": [{"name": "call_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Call Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/id/{book_id}": {"get": {"tags": ["Books"], "summary": "Get Book By Id", "description": "Get a book by book ID.\n\n- **book_id**: Book ID", "operationId": "get_book_by_id_api_v1_book_search_id__book_id__get", "parameters": [{"name": "book_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/title/{title}": {"get": {"tags": ["Books"], "summary": "Search Books By Title", "description": "Search books by title.\nSupports exact match or fuzzy search.\nReturns detailed book information including author, publisher, and category details.\n\n- **title**: Book title\n- **exact_match**: Whether to match exactly\n- **limit**: Maximum number of records to return", "operationId": "search_books_by_title_api_v1_book_search_title__title__get", "parameters": [{"name": "title", "in": "path", "required": true, "schema": {"type": "string", "title": "Title"}}, {"name": "exact_match", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Exact Match"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 20, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookDetail"}, "title": "Response Search Books By Title Api V1 Book Search Title  Title  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/author/{author_name}": {"get": {"tags": ["Books"], "summary": "Search Books By Author", "description": "Search books by author name.\n\n- **author_name**: Author name\n- **limit**: Maximum number of records to return", "operationId": "search_books_by_author_api_v1_book_search_author__author_name__get", "parameters": [{"name": "author_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Author Name"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 20, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookResponse"}, "title": "Response Search Books By Author Api V1 Book Search Author  Author Name  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/publisher/{publisher_name}": {"get": {"tags": ["Books"], "summary": "Search Books By Publisher", "description": "Search books by publisher name.\n\n- **publisher_name**: Publisher name\n- **limit**: Maximum number of records to return", "operationId": "search_books_by_publisher_api_v1_book_search_publisher__publisher_name__get", "parameters": [{"name": "publisher_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Publisher Name"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 20, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookResponse"}, "title": "Response Search Books By Publisher Api V1 Book Search Publisher  Publisher Name  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book/search/category/{category_name}": {"get": {"tags": ["Books"], "summary": "Search Books By Category", "description": "Search books by category name.\n\n- **category_name**: Category name\n- **limit**: Maximum number of records to return", "operationId": "search_books_by_category_api_v1_book_search_category__category_name__get", "parameters": [{"name": "category_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Category Name"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 20, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookResponse"}, "title": "Response Search Books By Category Api V1 Book Search Category  Category Name  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book_copies/": {"get": {"tags": ["Book Copies"], "summary": "Get Book Copies", "description": "Get all book copies with optional filtering.\n\n- **limit**: Maximum number of copies to return\n- **book_title**: Filter by book title (optional)\n- **status**: Filter by status (optional)\n- **condition**: Filter by condition (optional)\n- **location**: Filter by location (optional)", "operationId": "get_book_copies_api_v1_book_copies__get", "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 20, "title": "Limit"}}, {"name": "book_title", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Book Title"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}}, {"name": "condition", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Condition"}}, {"name": "location", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookCopyResponse"}, "title": "Response Get Book Copies Api V1 Book Copies  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Book Copies"], "summary": "Create Book Copy", "description": "Create a new book copy.\n\n- **book_copy_in**: Book copy creation data", "operationId": "create_book_copy_api_v1_book_copies__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book_copies/{copy_id}": {"get": {"tags": ["Book Copies"], "summary": "Get Book Copy", "description": "Get detailed information about a book copy.\n\n- **copy_id**: Copy ID", "operationId": "get_book_copy_api_v1_book_copies__copy_id__get", "parameters": [{"name": "copy_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Copy ID"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Book Copies"], "summary": "Update Book Copy", "description": "Update book copy information.\n\n- **copy_id**: Copy ID\n- **book_copy_in**: Updated copy data", "operationId": "update_book_copy_api_v1_book_copies__copy_id__put", "parameters": [{"name": "copy_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Copy ID"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Book Copies"], "summary": "Partial Update Book Copy", "description": "Partially update book copy information.\nOnly the fields provided will be updated.\n\n- **copy_id**: Copy ID\n- **book_copy_in**: Updated copy data (only include fields that need to be updated)", "operationId": "partial_update_book_copy_api_v1_book_copies__copy_id__patch", "parameters": [{"name": "copy_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Copy ID"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Book Copies"], "summary": "Delete Book Copy", "description": "Delete a book copy. Copies that are currently borrowed cannot be deleted.\n\n- **copy_id**: Copy ID", "operationId": "delete_book_copy_api_v1_book_copies__copy_id__delete", "parameters": [{"name": "copy_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Copy ID"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book_copies/qr-code/{qr_code}": {"get": {"tags": ["Book Copies"], "summary": "Get Book Copy By Qr Code", "operationId": "get_book_copy_by_qr_code_api_v1_book_copies_qr_code__qr_code__get", "parameters": [{"name": "qr_code", "in": "path", "required": true, "schema": {"type": "string", "title": "Book QR code"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookCopyResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book_copies/title/{title}/status": {"get": {"tags": ["Book Copies"], "summary": "Get Book Borrow Status By Title", "description": "Get the borrowing status of all copies of a specific book.\nReturns the availability information of books that match the title.\n\n- **title**: Title\n- **exact_match**: Whether to match exactly\n- **limit**: Maximum number of books to return", "operationId": "get_book_borrow_status_by_title_api_v1_book_copies_title__title__status_get", "parameters": [{"name": "title", "in": "path", "required": true, "schema": {"type": "string", "title": "Book title"}}, {"name": "exact_match", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Exact Match"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 5, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookBorrowStatusResponse"}, "title": "Response Get Book Borrow Status By Title Api V1 Book Copies Title  Title  Status Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/book_copies/location/{location}": {"get": {"tags": ["Book Copies"], "summary": "Get Book Copies By Location", "description": "Retrieve book copies by location name.\n\n- **location**: Location name to search for (e.g., \"Main Shelf A\", \"Reference Section\")\n- **status**: Filter by status (optional)\n- **condition**: Filter by condition (optional)\n- **limit**: Maximum number of copies to return", "operationId": "get_book_copies_by_location_api_v1_book_copies_location__location__get", "parameters": [{"name": "location", "in": "path", "required": true, "schema": {"type": "string", "title": "Book location"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}}, {"name": "condition", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Condition"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookCopyResponse"}, "title": "Response Get Book Copies By Location Api V1 Book Copies Location  Location  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/": {"get": {"tags": ["Borrowing"], "summary": "Get All Borrowings", "description": "Get all borrowing records with optional filtering", "operationId": "get_all_borrowings_api_v1_borrowing__get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Skip the first N records", "default": 0, "title": "Skip"}, "description": "Skip the first N records"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "description": "Maximum number of records to return", "default": 100, "title": "Limit"}, "description": "Maximum number of records to return"}, {"name": "status", "in": "query", "required": false, "schema": {"type": "string", "description": "Filter status: active, returned, overdue, all", "title": "Status"}, "description": "Filter status: active, returned, overdue, all"}, {"name": "sort_by", "in": "query", "required": false, "schema": {"type": "string", "description": "Sort by field: borrow_date, due_date, return_date", "default": "borrow_date", "title": "Sort By"}, "description": "Sort by field: borrow_date, due_date, return_date"}, {"name": "order", "in": "query", "required": false, "schema": {"type": "string", "description": "Sort direction: asc or desc", "default": "desc", "title": "Order"}, "description": "Sort direction: asc or desc"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get All Borrowings Api V1 Borrowing  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Borrowing"], "summary": "Borrow Book", "description": "Create a new borrowing record\n\nOnly need to provide:\n- copy_id: Book copy ID\n- matric_number: Student matriculation number\n- loan_days: (optional) Borrowing days, default 14 days\n\nThe system will automatically set the borrowing date to the current date and calculate the due date", "operationId": "borrow_book_api_v1_borrowing__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BorrowCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BorrowDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/return/{borrow_id}": {"put": {"tags": ["Borrowing"], "summary": "Return Book", "description": "Return the book", "operationId": "return_book_api_v1_borrowing_return__borrow_id__put", "parameters": [{"name": "borrow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Borrow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BorrowDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/extend/{borrow_id}": {"put": {"tags": ["Borrowing"], "summary": "Extend Borrowing", "description": "Extend the borrowing period", "operationId": "extend_borrowing_api_v1_borrowing_extend__borrow_id__put", "parameters": [{"name": "borrow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Borrow Id"}}, {"name": "days", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 30, "minimum": 1, "description": "Extension days", "default": 14, "title": "Days"}, "description": "Extension days"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BorrowDetail"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/student/{identifier}": {"get": {"tags": ["Borrowing"], "summary": "Get Student Borrowings", "description": "Get borrowing records for a student by matric number or telegram ID", "operationId": "get_student_borrowings_api_v1_borrowing_student__identifier__get", "parameters": [{"name": "identifier", "in": "path", "required": true, "schema": {"type": "string", "title": "Identifier"}}, {"name": "active_only", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Only return current borrowings", "default": false, "title": "Active Only"}, "description": "Only return current borrowings"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Student Borrowings Api V1 Borrowing Student  Identifier  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/student/{identifier}/history": {"get": {"tags": ["Borrowing"], "summary": "Get Student Borrowing History", "description": "Get full borrowing history for a student", "operationId": "get_student_borrowing_history_api_v1_borrowing_student__identifier__history_get", "parameters": [{"name": "identifier", "in": "path", "required": true, "schema": {"type": "string", "title": "Identifier"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 200, "minimum": 1, "description": "Maximum number of records to return", "default": 50, "title": "Limit"}, "description": "Maximum number of records to return"}, {"name": "include_active", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Include current borrowings", "default": true, "title": "Include Active"}, "description": "Include current borrowings"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Student Borrowing History Api V1 Borrowing Student  Identifier  History Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/overdue": {"get": {"tags": ["Borrowing"], "summary": "Get Overdue Borrowings", "description": "Get overdue borrowing records", "operationId": "get_overdue_borrowings_api_v1_borrowing_overdue_get", "parameters": [{"name": "days_overdue", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "Overdue days threshold", "title": "Days Overdue"}, "description": "Overdue days threshold"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Overdue Borrowings Api V1 Borrowing Overdue Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/due-soon": {"get": {"tags": ["Borrowing"], "summary": "Get Due Soon Borrowings", "description": "Get borrowing records due soon (for reminder)", "operationId": "get_due_soon_borrowings_api_v1_borrowing_due_soon_get", "parameters": [{"name": "days", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 7, "minimum": 1, "description": "Days threshold for due soon", "default": 3, "title": "Days"}, "description": "Days threshold for due soon"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Due Soon Borrowings Api V1 Borrowing Due Soon Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/book/{book_id}": {"get": {"tags": ["Borrowing"], "summary": "Get Book Borrowing History", "description": "Get borrowing history for a specific book", "operationId": "get_book_borrowing_history_api_v1_borrowing_book__book_id__get", "parameters": [{"name": "book_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Book Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Book Borrowing History Api V1 Borrowing Book  Book Id  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/popular": {"get": {"tags": ["Borrowing"], "summary": "Get Popular Books", "description": "Get the most popular books in a period of time", "operationId": "get_popular_books_api_v1_borrowing_popular_get", "parameters": [{"name": "days", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 365, "minimum": 1, "description": "Days range for statistics", "default": 90, "title": "Days"}, "description": "Days range for statistics"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 50, "minimum": 1, "description": "Number of popular books to return", "default": 10, "title": "Limit"}, "description": "Number of popular books to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object"}, "title": "Response Get Popular Books Api V1 Borrowing Popular Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/active": {"get": {"tags": ["Borrowing"], "summary": "Get Active Borrowings", "description": "Get current active borrowings with filtering options and statistical data", "operationId": "get_active_borrowings_api_v1_borrowing_active_get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 200, "minimum": 1, "default": 50, "title": "Limit"}}, {"name": "overdue_only", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Only show overdue borrowings", "default": false, "title": "Overdue Only"}, "description": "Only show overdue borrowings"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ActiveBorrowingsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/student/{identifier}/due-soon": {"get": {"tags": ["Borrowing"], "summary": "Get Student Due Soon Borrowings", "description": "Get borrowing records due soon for a student by matric number or telegram ID\n\nArgs:\n    identifier: Student's matric number or telegram ID\n    days: Days threshold for due soon\n    limit: Maximum number of records to return", "operationId": "get_student_due_soon_borrowings_api_v1_borrowing_student__identifier__due_soon_get", "parameters": [{"name": "identifier", "in": "path", "required": true, "schema": {"type": "string", "title": "Identifier"}}, {"name": "days", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 7, "minimum": 1, "description": "Days threshold for due soon", "default": 3, "title": "Days"}, "description": "Days threshold for due soon"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Student Due Soon Borrowings Api V1 Borrowing Student  Identifier  Due Soon Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/borrowing/student/{identifier}/overdue": {"get": {"tags": ["Borrowing"], "summary": "Get Student Overdue Borrowings", "description": "Get overdue borrowing records for a student by matric number or telegram ID\n\nArgs:\n    identifier: Student's matric number or telegram ID\n    days_overdue: Overdue days threshold\n    skip: Number of records to skip\n    limit: Maximum number of records to return", "operationId": "get_student_overdue_borrowings_api_v1_borrowing_student__identifier__overdue_get", "parameters": [{"name": "identifier", "in": "path", "required": true, "schema": {"type": "string", "title": "Identifier"}}, {"name": "days_overdue", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "Overdue days threshold", "title": "Days Overdue"}, "description": "Overdue days threshold"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1, "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BorrowDetail"}, "title": "Response Get Student Overdue Borrowings Api V1 Borrowing Student  Identifier  Overdue Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/student/": {"post": {"tags": ["Students"], "summary": "Create Student", "description": "Create a new student.", "operationId": "create_student_api_v1_student__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StudentCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StudentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Students"], "summary": "Get Students", "description": "Retrieve all students with optional filters.", "operationId": "get_students_api_v1_student__get", "parameters": [{"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by status: active, inactive, suspended", "title": "Status"}, "description": "Filter by status: active, inactive, suspended"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/StudentResponse"}, "title": "Response Get Students Api V1 Student  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/student/search": {"get": {"tags": ["Students"], "summary": "Search Students", "description": "Search for students by telegram id, name, matric number or email.\nReturns up to 10 most relevant results for chatbot usage.", "operationId": "search_students_api_v1_student_search_get", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "minLength": 2, "description": "Search query (name, matric, email)", "title": "Query"}, "description": "Search query (name, matric, email)"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/StudentResponse"}, "title": "Response Search Students Api V1 Student Search Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/student/{identifier}": {"patch": {"tags": ["Students"], "summary": "Update Student", "description": "Partially update student information by matric number or Telegram ID.\nOnly the fields provided in the request will be updated.", "operationId": "update_student_api_v1_student__identifier__patch", "parameters": [{"name": "identifier", "in": "path", "required": true, "schema": {"type": "string", "description": "Student matric number or Telegram ID", "title": "Identifier"}, "description": "Student matric number or Telegram ID"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StudentUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StudentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/authors/": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Authors", "description": "Retrieve a list of authors.", "operationId": "get_authors_api_v1_metadata_authors__get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/AuthorResponse"}, "title": "Response Get Authors Api V1 Metadata Authors  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Metadata", "Metadata"], "summary": "Create Author", "description": "Create a new author.", "operationId": "create_author_api_v1_metadata_authors__post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthorCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/authors/{author_id}": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Author", "description": "Retrieve detailed information about an author.", "operationId": "get_author_api_v1_metadata_authors__author_id__get", "parameters": [{"name": "author_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Author Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Metadata", "Metadata"], "summary": "Update Author", "description": "Update author information.", "operationId": "update_author_api_v1_metadata_authors__author_id__put", "parameters": [{"name": "author_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Author Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthorUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/categories": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Categories", "description": "Retrieve a list of categories.\n\n- **main_only**: If true, returns only main categories (no parent)", "operationId": "get_categories_api_v1_metadata_categories_get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "main_only", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Main Only"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CategoryResponse"}, "title": "Response Get Categories Api V1 Metadata Categories Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Metadata", "Metadata"], "summary": "Create Category", "description": "Create a new category.", "operationId": "create_category_api_v1_metadata_categories_post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/categories/{category_id}/subcategories": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Subcategories", "description": "Retrieve all subcategories for a specific category.", "operationId": "get_subcategories_api_v1_metadata_categories__category_id__subcategories_get", "parameters": [{"name": "category_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Category Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CategoryResponse"}, "title": "Response Get Subcategories Api V1 Metadata Categories  Category Id  Subcategories Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/categories/{category_id}": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Category", "description": "Retrieve detailed information about a category.", "operationId": "get_category_api_v1_metadata_categories__category_id__get", "parameters": [{"name": "category_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Category Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/publishers": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Publishers", "description": "Retrieve a list of publishers.", "operationId": "get_publishers_api_v1_metadata_publishers_get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PublisherResponse"}, "title": "Response Get Publishers Api V1 Metadata Publishers Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Metadata", "Metadata"], "summary": "Create Publisher", "description": "Create a new publisher or return existing one.\nIf publisher exists, return it.\nIf not exists, create new one with auto-incremented publisher_id.", "operationId": "create_publisher_api_v1_metadata_publishers_post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PublisherCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PublisherResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/locations": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Locations", "description": "Retrieve a list of all book locations with their QR codes.\n\nReturns all locations in the library with their:\n- Location ID\n- Location name\n- Location description\n- Location QR code\n- Creation and update timestamps", "operationId": "get_locations_api_v1_metadata_locations_get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/BookLocationResponse"}, "title": "Response Get Locations Api V1 Metadata Locations Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/locations/{location_id}": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Location", "description": "Retrieve detailed information about a specific location.\n\n- **location_id**: Location ID", "operationId": "get_location_api_v1_metadata_locations__location_id__get", "parameters": [{"name": "location_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Location Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookLocationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/metadata/locations/location-qr-code/{location_qr_code}": {"get": {"tags": ["Metadata", "Metadata"], "summary": "Get Location By Qr Code", "description": "Retrieve location information by its location QR code.\n\n- **location_qr_code**: Location QR code", "operationId": "get_location_by_qr_code_api_v1_metadata_locations_location_qr_code__location_qr_code__get", "parameters": [{"name": "location_qr_code", "in": "path", "required": true, "schema": {"type": "string", "title": "Location Qr Code"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BookLocationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/statistics/daily": {"get": {"tags": ["Statistics"], "summary": "Get Daily Stats", "description": "Get daily borrowing and return statistics", "operationId": "get_daily_stats_api_v1_statistics_daily_get", "parameters": [{"name": "start_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "End Date"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/DailyStats"}, "title": "Response Get Daily Stats Api V1 Statistics Daily Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/statistics/categories": {"get": {"tags": ["Statistics"], "summary": "Get Category Stats", "description": "Get book category statistics", "operationId": "get_category_stats_api_v1_statistics_categories_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CategoryStats"}, "type": "array", "title": "Response Get Category Stats Api V1 Statistics Categories Get"}}}}}}}, "/api/v1/statistics/overdue": {"get": {"tags": ["Statistics"], "summary": "Get Overdue Books", "description": "Get list of overdue books", "operationId": "get_overdue_books_api_v1_statistics_overdue_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/OverdueBooks"}, "type": "array", "title": "Response Get Overdue Books Api V1 Statistics Overdue Get"}}}}}}}, "/api/v1/statistics/students": {"get": {"tags": ["Statistics"], "summary": "Get Student Stats", "description": "Get student borrowing statistics", "operationId": "get_student_stats_api_v1_statistics_students_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/StudentStats"}, "type": "array", "title": "Response Get Student Stats Api V1 Statistics Students Get"}}}}}}}, "/api/v1/statistics/kpi": {"get": {"tags": ["Statistics"], "summary": "Get Kpi Metrics", "description": "Get KPI metrics", "operationId": "get_kpi_metrics_api_v1_statistics_kpi_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KPIMetrics"}}}}}}}, "/api/v1/statistics/popular-books": {"get": {"tags": ["Statistics"], "summary": "Get Popular Books", "description": "Get most popular books based on borrowing frequency", "operationId": "get_popular_books_api_v1_statistics_popular_books_get", "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "default": 10, "title": "Limit"}}, {"name": "start_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Date"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PopularBooks"}, "title": "Response Get Popular Books Api V1 Statistics Popular Books Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/statistics/borrowing-trends": {"get": {"tags": ["Statistics"], "summary": "Get Borrowing Trends", "description": "Get borrowing trends over time", "operationId": "get_borrowing_trends_api_v1_statistics_borrowing_trends_get", "parameters": [{"name": "start_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "End Date"}}, {"name": "interval", "in": "query", "required": false, "schema": {"type": "string", "pattern": "^(day|week|month)$", "default": "day", "title": "Interval"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BorrowingTrend"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/statistics/student-activity": {"get": {"tags": ["Statistics"], "summary": "Get Student Activity", "description": "Get most active students based on borrowing frequency", "operationId": "get_student_activity_api_v1_statistics_student_activity_get", "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "default": 10, "title": "Limit"}}, {"name": "start_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Date"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/StudentActivity"}, "title": "Response Get Student Activity Api V1 Statistics Student Activity Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/statistics/library-utilization": {"get": {"tags": ["Statistics"], "summary": "Get Library Utilization", "description": "Get library utilization metrics", "operationId": "get_library_utilization_api_v1_statistics_library_utilization_get", "parameters": [{"name": "start_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "End Date"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LibraryUtilization"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/statistics/category-trends": {"get": {"tags": ["Statistics"], "summary": "Get Category Trends", "description": "Get borrowing trends by category", "operationId": "get_category_trends_api_v1_statistics_category_trends_get", "parameters": [{"name": "start_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time", "title": "End Date"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Response Get Category Trends Api V1 Statistics Category Trends Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/health/database": {"get": {"tags": ["Health"], "summary": "Check Database", "operationId": "check_database_api_v1_health_database_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/health/details": {"get": {"tags": ["Health"], "summary": "Database Details", "operationId": "database_details_api_v1_health_details_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/nlu/parse": {"post": {"tags": ["Natural Language Understanding", "NLU"], "summary": "Parse Natural Language", "description": "\u89e3\u6790\u81ea\u7136\u8bed\u8a00\u8f93\u5165\n\n- **text**: \u7528\u6237\u7684\u81ea\u7136\u8bed\u8a00\u8f93\u5165\n- **language**: \u6307\u5b9a\u8bed\u8a00(\u53ef\u9009, \u652f\u6301auto-detect)\n- **context**: \u4e0a\u4e0b\u6587\u4fe1\u606f(\u53ef\u9009)\n\n\u8fd4\u56de\u610f\u56fe\u8bc6\u522b\u3001\u5b9e\u4f53\u63d0\u53d6\u548cSQL\u67e5\u8be2\u751f\u6210\u7ed3\u679c", "operationId": "parse_natural_language_api_v1_nlu_parse_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NLURequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NLUResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/nlu/generate-query": {"post": {"tags": ["Natural Language Understanding", "NLU"], "summary": "Generate Query", "description": "\u57fa\u4e8e\u610f\u56fe\u548c\u5b9e\u4f53\u751f\u6210SQL\u67e5\u8be2\n\n- **intent**: \u8bc6\u522b\u7684\u610f\u56fe\n- **entities**: \u63d0\u53d6\u7684\u5b9e\u4f53\n- **params**: \u989d\u5916\u53c2\u6570(\u53ef\u9009)\n\n\u8fd4\u56de\u751f\u6210\u7684SQL\u67e5\u8be2\u548c\u9a8c\u8bc1\u7ed3\u679c", "operationId": "generate_query_api_v1_nlu_generate_query_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/nlu/intents": {"get": {"tags": ["Natural Language Understanding", "NLU"], "summary": "Get Supported Intents", "description": "\u83b7\u53d6\u652f\u6301\u7684\u610f\u56fe\u5217\u8868", "operationId": "get_supported_intents_api_v1_nlu_intents_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/nlu/entities": {"get": {"tags": ["Natural Language Understanding", "NLU"], "summary": "Get Supported Entities", "description": "\u83b7\u53d6\u652f\u6301\u7684\u5b9e\u4f53\u7c7b\u578b", "operationId": "get_supported_entities_api_v1_nlu_entities_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/nlu/test": {"post": {"tags": ["Natural Language Understanding", "NLU"], "summary": "Test Nlu Pipeline", "description": "\u6d4b\u8bd5\u5b8c\u6574\u7684NLU\u5904\u7406\u6d41\u6c34\u7ebf\n\u5305\u62ec\u610f\u56fe\u8bc6\u522b\u3001\u5b9e\u4f53\u63d0\u53d6\u3001SQL\u751f\u6210\u548c\u67e5\u8be2\u6267\u884c", "operationId": "test_nlu_pipeline_api_v1_nlu_test_post", "parameters": [{"name": "text", "in": "query", "required": true, "schema": {"type": "string", "description": "\u6d4b\u8bd5\u6587\u672c", "title": "Text"}, "description": "\u6d4b\u8bd5\u6587\u672c"}, {"name": "language", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "\u8bed\u8a00", "title": "Language"}, "description": "\u8bed\u8a00"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/smart-query/ask": {"post": {"tags": ["Smart Query", "Smart Query"], "summary": "Smart Query", "description": "\u667a\u80fd\u67e5\u8be2\u4e3b\u63a5\u53e3\n\n\u63a5\u53d7\u81ea\u7136\u8bed\u8a00\u8f93\u5165\uff0c\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u548c\u667a\u80fd\u54cd\u5e94\n\n\u652f\u6301\u7684\u67e5\u8be2\u7c7b\u578b\uff1a\n- \u56fe\u4e66\u67e5\u8be2\uff1a\u6839\u636e\u4e66\u540d\u3001\u4f5c\u8005\u3001\u7c7b\u522b\u67e5\u627e\u56fe\u4e66\n- \u5e93\u5b58\u67e5\u8be2\uff1a\u67e5\u770b\u56fe\u4e66\u53ef\u7528\u6027\u548c\u72b6\u6001\n- \u501f\u9605\u8bb0\u5f55\uff1a\u67e5\u8be2\u501f\u9605\u5386\u53f2\u548c\u5f53\u524d\u72b6\u6001\n- \u5b66\u751f\u501f\u9605\uff1a\u67e5\u770b\u7279\u5b9a\u5b66\u751f\u7684\u501f\u9605\u60c5\u51b5\n- \u7edf\u8ba1\u4fe1\u606f\uff1a\u56fe\u4e66\u501f\u9605\u7edf\u8ba1\u548c\u70ed\u95e8\u5ea6\u5206\u6790\n- \u903e\u671f\u67e5\u8be2\uff1a\u67e5\u627e\u903e\u671f\u56fe\u4e66\u548c\u76f8\u5173\u4fe1\u606f\n\nExamples:\n- \"\u67e5\u627e\u300a\u4e09\u56fd\u6f14\u4e49\u300b\"\n- \"\u9c81\u8fc5\u7684\u4f5c\u54c1\u6709\u54ea\u4e9b\uff1f\"\n- \"\u8ba1\u7b97\u673a\u7c7b\u522b\u7684\u4e66\u7c4d\"\n- \"\u5f20\u4e09\u7684\u501f\u9605\u8bb0\u5f55\"\n- \"\u6700\u70ed\u95e8\u768410\u672c\u4e66\"\n- \"\u6709\u54ea\u4e9b\u903e\u671f\u7684\u4e66\uff1f\"", "operationId": "smart_query_api_v1_smart_query_ask_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SmartQueryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SmartQueryResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/smart-query/examples": {"get": {"tags": ["Smart Query", "Smart Query"], "summary": "Get Query Examples", "description": "\u83b7\u53d6\u67e5\u8be2\u793a\u4f8b\n\n\u8fd4\u56de\u5404\u79cd\u7c7b\u578b\u7684\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u793a\u4f8b\uff0c\u5e2e\u52a9\u7528\u6237\u4e86\u89e3\u652f\u6301\u7684\u67e5\u8be2\u683c\u5f0f", "operationId": "get_query_examples_api_v1_smart_query_examples_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/smart-query/capabilities": {"get": {"tags": ["Smart Query", "Smart Query"], "summary": "Get Query Capabilities", "description": "\u83b7\u53d6\u7cfb\u7edf\u67e5\u8be2\u80fd\u529b\u8bf4\u660e\n\n\u8fd4\u56de\u7cfb\u7edf\u652f\u6301\u7684\u529f\u80fd\u3001\u9650\u5236\u548c\u6700\u4f73\u5b9e\u8df5", "operationId": "get_query_capabilities_api_v1_smart_query_capabilities_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/smart-query/health": {"get": {"tags": ["Smart Query", "Smart Query"], "summary": "Query Service Health", "description": "\u68c0\u67e5\u667a\u80fd\u67e5\u8be2\u670d\u52a1\u5065\u5eb7\u72b6\u6001\n\n\u8fd4\u56de\u5404\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u72b6\u6001", "operationId": "query_service_health_api_v1_smart_query_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/llm-query/ask": {"post": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Llm Smart Query", "description": "LLM\u589e\u5f3a\u7684\u667a\u80fd\u67e5\u8be2\u4e3b\u63a5\u53e3\n\n\u4f7f\u7528\u672c\u5730\u90e8\u7f72\u7684Llama3.2\u8fdb\u884c\u66f4\u667a\u80fd\u7684\u610f\u56fe\u8bc6\u522b\u548cSQL\u751f\u6210\n\nFeatures:\n- \ud83e\udd16 **LLM\u9a71\u52a8\u7684\u610f\u56fe\u7406\u89e3**: \u4f7f\u7528Llama3.2\u8fdb\u884c\u4e0a\u4e0b\u6587\u611f\u77e5\u7684\u610f\u56fe\u8bc6\u522b\n- \ud83d\udd0d **\u667a\u80fd\u5b9e\u4f53\u63d0\u53d6**: \u81ea\u52a8\u8bc6\u522b\u548c\u63d0\u53d6\u67e5\u8be2\u4e2d\u7684\u5173\u952e\u5b9e\u4f53\n- \ud83d\udcca **\u52a8\u6001SQL\u751f\u6210**: \u6839\u636e\u610f\u56fe\u548c\u5b9e\u4f53\u751f\u6210\u4f18\u5316\u7684SQL\u67e5\u8be2\n- \ud83d\udcac **\u81ea\u7136\u8bed\u8a00\u54cd\u5e94**: \u751f\u6210\u53cb\u597d\u7684\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u7ed3\u679c\u63cf\u8ff0\n- \ud83c\udfaf **\u667a\u80fd\u5efa\u8bae**: \u63d0\u4f9b\u76f8\u5173\u7684\u540e\u7eed\u67e5\u8be2\u5efa\u8bae\n- \ud83d\udee1\ufe0f **\u5b89\u5168\u53ef\u9760**: \u5305\u542bSQL\u6ce8\u5165\u9632\u62a4\u548c\u9519\u8bef\u6062\u590d\u673a\u5236\n\nExamples:\n- \"\u5e2e\u6211\u627e\u627e\u9c81\u8fc5\u5199\u7684\u6240\u6709\u4f5c\u54c1\uff0c\u7279\u522b\u662f\u5c0f\u8bf4\u7c7b\u7684\"\n- \"\u67e5\u770b\u5f20\u4e09\u6700\u8fd1\u501f\u4e86\u54ea\u4e9b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u4e66\u7c4d\"\n- \"\u7edf\u8ba1\u4e00\u4e0b\u672c\u6708\u6700\u53d7\u6b22\u8fce\u768410\u672c\u4e66\uff0c\u6309\u501f\u9605\u6b21\u6570\u6392\u5e8f\"\n- \"\u6709\u6ca1\u6709\u903e\u671f\u8d85\u8fc7\u4e00\u5468\u7684\u56fe\u4e66\uff1f\u9700\u8981\u50ac\u8fd8\u7684\u90a3\u79cd\"", "operationId": "llm_smart_query_api_v1_llm_query_ask_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LLMQueryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LLMQueryResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/llm-query/complex-query": {"post": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Complex Query Analysis", "description": "\u590d\u6742\u67e5\u8be2\u5206\u6790\u63a5\u53e3\n\n\u76f4\u63a5\u4f7f\u7528LLM\u5206\u6790\u590d\u6742\u7684\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\uff0c\u65e0\u9700\u9884\u5b9a\u4e49\u610f\u56fe\n\u9002\u7528\u4e8e\u590d\u6742\u7684\u3001\u591a\u6761\u4ef6\u7684\u3001\u6216\u8005\u8de8\u591a\u4e2a\u6982\u5ff5\u7684\u67e5\u8be2\n\nExamples:\n- \"\u627e\u51fa\u501f\u9605\u91cf\u6700\u9ad8\u7684\u79d1\u6280\u7c7b\u56fe\u4e66\uff0c\u540c\u65f6\u663e\u793a\u8fd9\u4e9b\u4e66\u7684\u4f5c\u8005\u4fe1\u606f\u548c\u5f53\u524d\u5e93\u5b58\u72b6\u6001\"\n- \"\u7edf\u8ba1\u6bcf\u4e2a\u9662\u7cfb\u5b66\u751f\u7684\u501f\u9605\u504f\u597d\uff0c\u6309\u56fe\u4e66\u7c7b\u522b\u5206\u7ec4\u663e\u793a\"\n- \"\u67e5\u8be2\u4eca\u5e74\u65b0\u5165\u5e93\u7684\u56fe\u4e66\u4e2d\uff0c\u54ea\u4e9b\u8fd8\u6ca1\u6709\u88ab\u501f\u9605\u8fc7\"", "operationId": "complex_query_analysis_api_v1_llm_query_complex_query_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ComplexQueryRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/llm-query/explain-sql": {"post": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Explain Sql Query", "description": "SQL\u67e5\u8be2\u89e3\u91ca\u63a5\u53e3\n\n\u4f7f\u7528LLM\u89e3\u91caSQL\u67e5\u8be2\u7684\u4f5c\u7528\u548c\u903b\u8f91\uff0c\u5e2e\u52a9\u7406\u89e3\u590d\u6742\u67e5\u8be2", "operationId": "explain_sql_query_api_v1_llm_query_explain_sql_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SQLExplainRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/llm-query/llm-status": {"get": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Get Llm Service Status", "description": "\u83b7\u53d6LLM\u670d\u52a1\u72b6\u6001\n\n\u68c0\u67e5Llama3.2\u8fde\u63a5\u72b6\u6001\u548c\u5404\u7ec4\u4ef6\u5065\u5eb7\u60c5\u51b5", "operationId": "get_llm_service_status_api_v1_llm_query_llm_status_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/llm-query/capabilities": {"get": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Get Llm Capabilities", "description": "\u83b7\u53d6LLM\u589e\u5f3a\u67e5\u8be2\u7684\u80fd\u529b\u8bf4\u660e", "operationId": "get_llm_capabilities_api_v1_llm_query_capabilities_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/llm-query/examples": {"get": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Get Llm Query Examples", "description": "\u83b7\u53d6LLM\u589e\u5f3a\u67e5\u8be2\u7684\u793a\u4f8b\n\n\u5c55\u793a\u5404\u79cd\u590d\u6742\u67e5\u8be2\u7684\u4f7f\u7528\u65b9\u6cd5", "operationId": "get_llm_query_examples_api_v1_llm_query_examples_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/llm-query/batch-process": {"post": {"tags": ["LLM Enhanced Query", "LLM Smart Query"], "summary": "Batch Process Queries", "description": "\u6279\u91cf\u5904\u7406\u591a\u4e2a\u67e5\u8be2\n\n\u9002\u7528\u4e8e\u9700\u8981\u540c\u65f6\u5904\u7406\u591a\u4e2a\u67e5\u8be2\u7684\u573a\u666f", "operationId": "batch_process_queries_api_v1_llm_query_batch_process_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BatchProcessRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"summary": "Root", "operationId": "root__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"ActiveBorrowingsResponse": {"properties": {"total_count": {"type": "integer", "title": "Total Count"}, "returned_count": {"type": "integer", "title": "Returned Count"}, "overdue_count": {"type": "integer", "title": "Overdue Count"}, "borrowings": {"items": {"$ref": "#/components/schemas/BorrowDetail"}, "type": "array", "title": "Borrowings"}}, "type": "object", "required": ["total_count", "returned_count", "overdue_count", "borrowings"], "title": "ActiveBorrowingsResponse", "description": "Response model for active borrowings query", "example": {"borrowings": [{"book_title": "Dream of the Red Chamber", "borrow_date": "2023-01-01T12:00:00Z", "borrow_id": 1, "call_number": "LIT-123-1", "copy_id": 1, "days_remaining": 14, "due_date": "2023-01-15T23:59:59Z", "is_overdue": false, "matric_number": "A0123456Z", "status": "borrowed", "student_email": "john.smith@university.edu", "student_name": "John Smith"}], "overdue_count": 12, "returned_count": 0, "total_count": 45}}, "AuthorCreate": {"properties": {"author_name": {"type": "string", "title": "Author Name", "description": "Author's name", "example": "Lu Xun"}}, "type": "object", "required": ["author_name"], "title": "AuthorCreate"}, "AuthorResponse": {"properties": {"author_name": {"type": "string", "title": "Author Name", "description": "Author's name", "example": "Lu Xun"}, "author_id": {"type": "integer", "title": "Author Id"}}, "type": "object", "required": ["author_name", "author_id"], "title": "AuthorResponse", "example": {"author_id": 1, "author_name": "Lu Xun"}}, "AuthorUpdate": {"properties": {"author_name": {"type": "string", "title": "Author Name", "description": "Author's name", "example": "Lu Xun"}}, "type": "object", "required": ["author_name"], "title": "AuthorUpdate"}, "BatchProcessRequest": {"properties": {"queries": {"items": {"type": "string"}, "type": "array", "title": "Queries", "description": "\u6279\u91cf\u67e5\u8be2\u5217\u8868"}}, "type": "object", "required": ["queries"], "title": "BatchProcessRequest", "description": "\u6279\u91cf\u5904\u7406\u8bf7\u6c42"}, "BookBorrowStatusResponse": {"properties": {"book_id": {"type": "integer", "title": "Book Id"}, "title": {"type": "string", "title": "Title"}, "total_copies": {"type": "integer", "title": "Total Copies"}, "available_copies": {"type": "integer", "title": "Available Copies"}, "copies_info": {"items": {"type": "object"}, "type": "array", "title": "Copies Info"}}, "type": "object", "required": ["book_id", "title", "total_copies", "available_copies", "copies_info"], "title": "BookBorrowStatusResponse"}, "BookCopyCreate": {"properties": {"book_id": {"type": "integer", "title": "Book Id"}, "acquisition_type": {"type": "string", "title": "Acquisition Type"}, "acquisition_date": {"type": "string", "format": "date", "title": "Acquisition Date"}, "price": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Price"}, "condition": {"type": "string", "title": "Condition", "default": "good"}, "status": {"type": "string", "title": "Status", "default": "available"}, "location_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Location Id"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}}, "type": "object", "required": ["book_id", "acquisition_type"], "title": "BookCopyCreate"}, "BookCopyResponse": {"properties": {"book_id": {"type": "integer", "title": "Book Id"}, "acquisition_type": {"type": "string", "title": "Acquisition Type"}, "acquisition_date": {"type": "string", "format": "date", "title": "Acquisition Date"}, "price": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Price"}, "condition": {"type": "string", "title": "Condition", "default": "good"}, "status": {"type": "string", "title": "Status", "default": "available"}, "location_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Location Id"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "copy_id": {"type": "integer", "title": "Copy Id"}, "qr_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Qr Code"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "book_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Book Title"}, "location_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location Name"}}, "type": "object", "required": ["book_id", "acquisition_type", "copy_id", "created_at", "updated_at"], "title": "BookCopyResponse"}, "BookCopyUpdate": {"properties": {"book_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Book Id"}, "acquisition_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Acquisition Type"}, "acquisition_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Acquisition Date"}, "price": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Price"}, "condition": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Condition"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "location_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Location Id"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}}, "type": "object", "title": "BookCopyUpdate"}, "BookCreate": {"properties": {"title": {"type": "string", "title": "Title", "description": "Title", "example": "Dream of the Red Chamber"}, "isbn": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Isbn", "description": "ISBN", "example": "9787020002207"}, "call_number": {"type": "string", "title": "Call Number", "description": "Call Number", "example": "LIT-123-1"}, "author_id": {"type": "integer", "title": "Author Id", "description": "Author ID", "example": 1}, "publisher_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publisher Id", "description": "Publisher ID", "example": 1}, "publication_year": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publication Year", "description": "Publication Year", "example": 1982}, "language_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language Code", "description": "Language Code", "example": "EN"}, "category_id": {"type": "integer", "title": "Category Id", "description": "Category ID", "example": 1}, "initial_copies": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Initial Copies", "description": "Number of initial copies to create", "default": 0, "example": 1}}, "type": "object", "required": ["title", "call_number", "author_id", "category_id"], "title": "BookCreate", "description": "Model used when creating a book", "example": {"author_id": 1, "call_number": "LIT-123", "category_id": 1, "initial_copies": 3, "isbn": "9787020002207", "language_code": "ZH", "publication_year": 1982, "publisher_id": 1, "title": "Dream of the Red Chamber"}}, "BookDetail": {"properties": {"title": {"type": "string", "title": "Title", "description": "Title", "example": "Dream of the Red Chamber"}, "isbn": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Isbn", "description": "ISBN", "example": "9787020002207"}, "call_number": {"type": "string", "title": "Call Number", "description": "Call Number", "example": "LIT-123-1"}, "author_id": {"type": "integer", "title": "Author Id", "description": "Author ID", "example": 1}, "publisher_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publisher Id", "description": "Publisher ID", "example": 1}, "publication_year": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publication Year", "description": "Publication Year", "example": 1982}, "language_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language Code", "description": "Language Code", "example": "EN"}, "category_id": {"type": "integer", "title": "Category Id", "description": "Category ID", "example": 1}, "book_id": {"type": "integer", "title": "Book Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "author_name": {"type": "string", "title": "Author Name"}, "publisher_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Publisher Name"}, "language_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language Name"}, "category_name": {"type": "string", "title": "Category Name"}, "available_copies": {"type": "integer", "title": "Available Copies"}, "total_copies": {"type": "integer", "title": "Total Copies"}}, "type": "object", "required": ["title", "call_number", "author_id", "category_id", "book_id", "created_at", "updated_at", "author_name", "category_name", "available_copies", "total_copies"], "title": "BookDetail", "description": "Model used when returning book detailed information, including associated information", "example": {"author_id": 1, "author_name": "Cao Xueqin", "available_copies": 2, "book_id": 1, "call_number": "LIT-123", "category_id": 1, "category_name": "Literature", "created_at": "2023-01-01T12:00:00", "isbn": "9787020002207", "language_code": "ZH", "language_name": "Chinese", "publication_year": 1982, "publisher_id": 1, "publisher_name": "People's Literature Publishing House", "title": "Dream of the Red Chamber", "total_copies": 3, "updated_at": "2023-01-01T12:00:00"}}, "BookLocationResponse": {"properties": {"location_name": {"type": "string", "title": "Location Name"}, "location_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location Description"}, "location_id": {"type": "integer", "title": "Location Id"}, "location_qr_code": {"type": "string", "format": "uuid4", "title": "Location Qr Code"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["location_name", "location_id", "location_qr_code", "created_at", "updated_at"], "title": "BookLocationResponse"}, "BookResponse": {"properties": {"title": {"type": "string", "title": "Title", "description": "Title", "example": "Dream of the Red Chamber"}, "isbn": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Isbn", "description": "ISBN", "example": "9787020002207"}, "call_number": {"type": "string", "title": "Call Number", "description": "Call Number", "example": "LIT-123-1"}, "author_id": {"type": "integer", "title": "Author Id", "description": "Author ID", "example": 1}, "publisher_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publisher Id", "description": "Publisher ID", "example": 1}, "publication_year": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publication Year", "description": "Publication Year", "example": 1982}, "language_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language Code", "description": "Language Code", "example": "EN"}, "category_id": {"type": "integer", "title": "Category Id", "description": "Category ID", "example": 1}, "book_id": {"type": "integer", "title": "Book Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["title", "call_number", "author_id", "category_id", "book_id", "created_at", "updated_at"], "title": "BookResponse", "description": "Model used when returning book basic information", "example": {"author_id": 1, "book_id": 1, "call_number": "LIT-123", "category_id": 1, "created_at": "2023-01-01T12:00:00", "isbn": "9787020002207", "language_code": "EN", "publication_year": 1982, "publisher_id": 1, "title": "Dream of the Red Chamber", "updated_at": "2023-01-01T12:00:00"}}, "BookUpdate": {"properties": {"title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title", "description": "Title", "example": "Dream of the Red Chamber"}, "isbn": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Isbn", "description": "ISBN", "example": "9787020002207"}, "call_number": {"type": "string", "title": "Call Number", "description": "Call Number", "example": "LIT-123-1"}, "author_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Author Id", "description": "Author ID", "example": 1}, "publisher_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publisher Id", "description": "Publisher ID", "example": 1}, "publication_year": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Publication Year", "description": "Publication Year", "example": 1982}, "language_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language Code", "description": "Language Code", "example": "EN"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id", "description": "Category ID", "example": 1}}, "type": "object", "required": ["call_number"], "title": "BookUpdate", "description": "Model used when updating a book", "example": {"author_id": 1, "call_number": "LIT-123", "category_id": 1, "isbn": "9787020002207", "language_code": "EN", "publication_year": 1982, "publisher_id": 1, "title": "Dream of the Red Chamber"}}, "BorrowCreate": {"properties": {"copy_id": {"type": "integer", "title": "Copy Id", "description": "Book copy ID", "example": 1}, "matric_number": {"type": "string", "title": "Matric Number", "description": "Student matriculation number"}, "loan_days": {"anyOf": [{"type": "integer", "maximum": 30.0, "minimum": 14.0}, {"type": "null"}], "title": "Loan Days", "description": "Loan period in days (default: 14)", "example": 14}}, "type": "object", "required": ["copy_id", "matric_number"], "title": "BorrowCreate", "description": "Simplified borrowing creation model"}, "BorrowDetail": {"properties": {"borrow_id": {"type": "integer", "title": "Borrow Id"}, "copy_id": {"type": "integer", "title": "Copy Id"}, "matric_number": {"type": "string", "title": "Matric Number"}, "borrow_date": {"type": "string", "format": "date-time", "title": "Borrow Date"}, "due_date": {"type": "string", "format": "date-time", "title": "Due Date"}, "status": {"$ref": "#/components/schemas/BorrowStatus"}, "extension_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Extension Date"}, "return_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Return Date"}, "is_overdue": {"type": "boolean", "title": "Is Overdue"}, "days_remaining": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Days Remaining"}, "book_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Book Title"}, "call_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Call Number"}, "student_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Student Name"}, "student_email": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Student Email"}, "student_telegram_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Student Telegram Id"}}, "type": "object", "required": ["borrow_id", "copy_id", "matric_number", "borrow_date", "due_date", "status", "is_overdue"], "title": "BorrowDetail", "description": "Detailed borrowing response model with book and student info", "example": {"book_title": "Dream of the Red Chamber", "borrow_date": "2023-01-01T12:00:00Z", "borrow_id": 1, "call_number": "LIT-123-1", "copy_id": 1, "days_remaining": 14, "due_date": "2023-01-15T23:59:59Z", "is_overdue": false, "matric_number": "A0123456Z", "status": "borrowed", "student_email": "john.smith@university.edu", "student_name": "John Smith", "student_telegram_id": "123456789"}}, "BorrowStatus": {"type": "string", "enum": ["borrowed", "extended", "returned", "overdue"], "title": "BorrowStatus", "description": "Borrowing status options"}, "BorrowingTrend": {"properties": {"time_period": {"type": "string", "title": "Time Period"}, "total_borrows": {"type": "integer", "title": "Total Borrows"}, "unique_readers": {"type": "integer", "title": "Unique Readers"}, "average_duration": {"type": "number", "title": "Average Duration"}, "category_distribution": {"additionalProperties": {"type": "integer"}, "type": "object", "title": "Category Distribution"}, "data": {"items": {"type": "object"}, "type": "array", "title": "Data"}}, "type": "object", "required": ["time_period", "total_borrows", "unique_readers", "average_duration", "category_distribution", "data"], "title": "BorrowingTrend"}, "CategoryCreate": {"properties": {"category_name": {"type": "string", "title": "Category Name", "description": "Category name", "example": "Science"}, "category_code": {"type": "string", "title": "Category Code", "description": "Category code", "example": "500"}, "parent_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Parent Id", "description": "Parent category ID"}}, "type": "object", "required": ["category_name", "category_code"], "title": "CategoryCreate"}, "CategoryResponse": {"properties": {"category_name": {"type": "string", "title": "Category Name", "description": "Category name", "example": "Science"}, "category_code": {"type": "string", "title": "Category Code", "description": "Category code", "example": "500"}, "parent_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Parent Id", "description": "Parent category ID"}, "category_id": {"type": "integer", "title": "Category Id"}, "parent_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Parent Name"}, "subcategories": {"items": {"$ref": "#/components/schemas/SubCategoryResponse"}, "type": "array", "title": "Subcategories", "default": []}}, "type": "object", "required": ["category_name", "category_code", "category_id"], "title": "CategoryResponse", "description": "Model used when returning category information", "example": {"category_code": "500", "category_id": 2, "category_name": "Science", "subcategories": [{"category_code": "500.1", "category_id": 5, "category_name": "Theory of Science"}]}}, "CategoryStats": {"properties": {"category": {"type": "string", "title": "Category"}, "total_books": {"type": "integer", "title": "Total Books"}, "available_books": {"type": "integer", "title": "Available Books"}, "borrowed_books": {"type": "integer", "title": "Borrowed Books"}, "borrow_count": {"type": "integer", "title": "Borrow Count"}}, "type": "object", "required": ["category", "total_books", "available_books", "borrowed_books", "borrow_count"], "title": "CategoryStats"}, "ComplexQueryRequest": {"properties": {"query": {"type": "string", "title": "Query", "description": "\u590d\u6742\u7684\u81ea\u7136\u8bed\u8a00\u67e5\u8be2"}, "context": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Context", "description": "\u67e5\u8be2\u4e0a\u4e0b\u6587"}}, "type": "object", "required": ["query"], "title": "ComplexQueryRequest", "description": "\u590d\u6742\u67e5\u8be2\u8bf7\u6c42"}, "DailyStats": {"properties": {"date": {"type": "string", "format": "date-time", "title": "Date"}, "total_borrows": {"type": "integer", "title": "Total Borrows"}, "total_returns": {"type": "integer", "title": "Total Returns"}, "active_readers": {"type": "integer", "title": "Active Readers"}}, "type": "object", "required": ["date", "total_borrows", "total_returns", "active_readers"], "title": "DailyStats"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "KPIMetrics": {"properties": {"total_books": {"type": "integer", "title": "Total Books"}, "total_students": {"type": "integer", "title": "Total Students"}, "active_borrows": {"type": "integer", "title": "Active Borrows"}, "overdue_books": {"type": "integer", "title": "Overdue Books"}, "average_borrow_duration": {"type": "number", "title": "Average Borrow Duration"}, "return_rate": {"type": "number", "title": "Return Rate"}}, "type": "object", "required": ["total_books", "total_students", "active_borrows", "overdue_books", "average_borrow_duration", "return_rate"], "title": "KPIMetrics"}, "LLMQueryRequest": {"properties": {"query": {"type": "string", "title": "Query", "description": "\u7528\u6237\u7684\u81ea\u7136\u8bed\u8a00\u67e5\u8be2"}, "context": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Context", "description": "\u5bf9\u8bdd\u4e0a\u4e0b\u6587"}, "language": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language", "description": "\u6307\u5b9a\u8bed\u8a00 (zh/en/auto)"}, "session_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Session Id", "description": "\u4f1a\u8bddID"}, "use_llm": {"type": "boolean", "title": "Use Llm", "description": "\u662f\u5426\u4f7f\u7528LLM\u5904\u7406", "default": true}, "detailed_response": {"type": "boolean", "title": "Detailed Response", "description": "\u662f\u5426\u8fd4\u56de\u8be6\u7ec6\u5904\u7406\u6b65\u9aa4", "default": false}}, "type": "object", "required": ["query"], "title": "LLMQueryRequest", "description": "LLM\u67e5\u8be2\u8bf7\u6c42"}, "LLMQueryResponse": {"properties": {"status": {"type": "string", "title": "Status", "description": "\u67e5\u8be2\u72b6\u6001"}, "processing_method": {"type": "string", "title": "Processing Method", "description": "\u5904\u7406\u65b9\u6cd5"}, "intent": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Intent", "description": "\u8bc6\u522b\u7684\u610f\u56fe"}, "entities": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Entities", "description": "\u63d0\u53d6\u7684\u5b9e\u4f53"}, "nlu_confidence": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Nlu Confidence", "description": "NLU\u7f6e\u4fe1\u5ea6"}, "sql_confidence": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Sql Confidence", "description": "SQL\u751f\u6210\u7f6e\u4fe1\u5ea6"}, "results": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Results", "description": "\u67e5\u8be2\u7ed3\u679c"}, "natural_response": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Natural Response", "description": "\u81ea\u7136\u8bed\u8a00\u54cd\u5e94"}, "result_summary": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result Summary", "description": "\u7ed3\u679c\u6458\u8981"}, "suggestions": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Suggestions", "description": "\u667a\u80fd\u5efa\u8bae"}, "result_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Result Count", "description": "\u7ed3\u679c\u6570\u91cf"}, "sql_query": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sql Query", "description": "\u751f\u6210\u7684SQL\u67e5\u8be2"}, "sql_explanation": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sql Explanation", "description": "SQL\u67e5\u8be2\u89e3\u91ca"}, "key_insights": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Key Insights", "description": "\u5173\u952e\u6d1e\u5bdf"}, "processing_steps": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Processing Steps", "description": "\u5904\u7406\u6b65\u9aa4"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message", "description": "\u9519\u8bef\u4fe1\u606f"}, "timestamp": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Timestamp", "description": "\u5904\u7406\u65f6\u95f4\u6233"}}, "type": "object", "required": ["status", "processing_method"], "title": "LLMQueryResponse", "description": "LLM\u67e5\u8be2\u54cd\u5e94"}, "LibraryUtilization": {"properties": {"total_books": {"type": "integer", "title": "Total Books"}, "borrowed_books": {"type": "integer", "title": "Borrowed Books"}, "available_books": {"type": "integer", "title": "Available Books"}, "utilization_rate": {"type": "number", "title": "Utilization Rate"}, "daily_utilization": {"additionalProperties": {"type": "integer"}, "type": "object", "title": "Daily Utilization"}}, "type": "object", "required": ["total_books", "borrowed_books", "available_books", "utilization_rate", "daily_utilization"], "title": "LibraryUtilization"}, "NLURequest": {"properties": {"text": {"type": "string", "title": "Text"}, "language": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language"}, "context": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Context"}}, "type": "object", "required": ["text"], "title": "NLURequest", "description": "NLU\u5904\u7406\u8bf7\u6c42"}, "NLUResponse": {"properties": {"intent": {"type": "string", "title": "Intent"}, "entities": {"type": "object", "title": "Entities"}, "confidence": {"type": "number", "title": "Confidence"}, "language": {"type": "string", "title": "Language"}, "original_text": {"type": "string", "title": "Original Text"}, "sql_query": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sql Query"}, "suggestions": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Suggestions"}, "clarifications": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Clarifications"}}, "type": "object", "required": ["intent", "entities", "confidence", "language", "original_text"], "title": "NLUResponse", "description": "NLU\u5904\u7406\u54cd\u5e94"}, "OverdueBooks": {"properties": {"book_id": {"type": "integer", "title": "Book Id"}, "title": {"type": "string", "title": "Title"}, "student_id": {"type": "string", "title": "Student Id"}, "student_name": {"type": "string", "title": "Student Name"}, "due_date": {"type": "string", "format": "date-time", "title": "Due Date"}, "days_overdue": {"type": "integer", "title": "Days Overdue"}}, "type": "object", "required": ["book_id", "title", "student_id", "student_name", "due_date", "days_overdue"], "title": "OverdueBooks"}, "PopularBooks": {"properties": {"book_id": {"type": "integer", "title": "Book Id"}, "title": {"type": "string", "title": "Title"}, "author": {"type": "string", "title": "Author"}, "borrow_count": {"type": "integer", "title": "Borrow Count"}, "category": {"type": "string", "title": "Category"}, "availability": {"type": "integer", "title": "Availability"}}, "type": "object", "required": ["book_id", "title", "author", "borrow_count", "category", "availability"], "title": "PopularBooks"}, "PublisherCreate": {"properties": {"publisher_name": {"type": "string", "title": "Publisher Name"}}, "type": "object", "required": ["publisher_name"], "title": "PublisherCreate"}, "PublisherResponse": {"properties": {"publisher_id": {"type": "integer", "title": "Publisher Id"}, "publisher_name": {"type": "string", "title": "Publisher Name"}}, "type": "object", "required": ["publisher_id", "publisher_name"], "title": "PublisherResponse", "description": "Model used when returning publisher information", "example": {"publisher_id": 1, "publisher_name": "People's Literature Publishing House"}}, "QueryRequest": {"properties": {"intent": {"type": "string", "title": "Intent"}, "entities": {"type": "object", "title": "Entities"}, "params": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Params"}}, "type": "object", "required": ["intent", "entities"], "title": "QueryRequest", "description": "\u67e5\u8be2\u751f\u6210\u8bf7\u6c42"}, "QueryResponse": {"properties": {"sql_query": {"type": "string", "title": "Sql Query"}, "is_valid": {"type": "boolean", "title": "Is Valid"}, "missing_entities": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Missing Entities"}, "estimated_results": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Estimated Results"}}, "type": "object", "required": ["sql_query", "is_valid"], "title": "QueryResponse", "description": "\u67e5\u8be2\u751f\u6210\u54cd\u5e94"}, "SQLExplainRequest": {"properties": {"sql_query": {"type": "string", "title": "Sql Query", "description": "\u8981\u89e3\u91ca\u7684SQL\u67e5\u8be2"}}, "type": "object", "required": ["sql_query"], "title": "SQLExplainRequest", "description": "SQL\u89e3\u91ca\u8bf7\u6c42"}, "SmartQueryRequest": {"properties": {"query": {"type": "string", "title": "Query", "description": "\u7528\u6237\u7684\u81ea\u7136\u8bed\u8a00\u67e5\u8be2"}, "context": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Context", "description": "\u5bf9\u8bdd\u4e0a\u4e0b\u6587"}, "language": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language", "description": "\u6307\u5b9a\u8bed\u8a00 (zh/en/auto)"}, "session_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Session Id", "description": "\u4f1a\u8bddID\uff0c\u7528\u4e8e\u4e0a\u4e0b\u6587\u8ddf\u8e2a"}}, "type": "object", "required": ["query"], "title": "SmartQueryRequest", "description": "\u667a\u80fd\u67e5\u8be2\u8bf7\u6c42"}, "SmartQueryResponse": {"properties": {"status": {"type": "string", "title": "Status", "description": "\u67e5\u8be2\u72b6\u6001"}, "intent": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Intent", "description": "\u8bc6\u522b\u7684\u610f\u56fe"}, "entities": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Entities", "description": "\u63d0\u53d6\u7684\u5b9e\u4f53"}, "confidence": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Confidence", "description": "\u7f6e\u4fe1\u5ea6"}, "results": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Results", "description": "\u67e5\u8be2\u7ed3\u679c"}, "natural_response": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Natural Response", "description": "\u81ea\u7136\u8bed\u8a00\u54cd\u5e94"}, "suggestions": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Suggestions", "description": "\u5efa\u8bae"}, "result_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Result Count", "description": "\u7ed3\u679c\u6570\u91cf"}, "sql_query": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sql Query", "description": "\u751f\u6210\u7684SQL\u67e5\u8be2"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message", "description": "\u9519\u8bef\u4fe1\u606f"}, "clarifying_questions": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Clarifying Questions", "description": "\u6f84\u6e05\u95ee\u9898"}, "session_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Session Id", "description": "\u4f1a\u8bddID"}}, "type": "object", "required": ["status"], "title": "SmartQueryResponse", "description": "\u667a\u80fd\u67e5\u8be2\u54cd\u5e94"}, "StudentActivity": {"properties": {"student_id": {"type": "string", "title": "Student Id"}, "student_name": {"type": "string", "title": "Student Name"}, "borrow_count": {"type": "integer", "title": "Borrow Count"}, "favorite_category": {"type": "string", "title": "Favorite Category"}, "average_borrow_duration": {"type": "number", "title": "Average Borrow Duration"}, "return_rate": {"type": "number", "title": "Return Rate"}}, "type": "object", "required": ["student_id", "student_name", "borrow_count", "favorite_category", "average_borrow_duration", "return_rate"], "title": "StudentActivity"}, "StudentCreate": {"properties": {"matric_number": {"type": "string", "title": "Matric Number", "description": "Matric Number (A + 7 digits + any letter)", "example": "A1234567H"}, "full_name": {"type": "string", "title": "Full Name", "description": "Full Name", "example": "John Doe"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "Email", "example": "john.doe@u.nus.edu"}, "telegram_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Telegram Id"}, "status": {"type": "string", "title": "Status", "default": "active"}}, "type": "object", "required": ["matric_number", "full_name", "email"], "title": "StudentCreate", "description": "Model used when creating a student"}, "StudentResponse": {"properties": {"matric_number": {"type": "string", "title": "Matric Number"}, "full_name": {"type": "string", "title": "Full Name", "description": "Full Name", "example": "John Doe"}, "email": {"type": "string", "format": "email", "title": "Email", "description": "Email", "example": "john.doe@u.nus.edu"}, "telegram_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Telegram Id"}, "status": {"type": "string", "title": "Status", "default": "active"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["matric_number", "full_name", "email", "created_at", "updated_at"], "title": "StudentResponse", "description": "Model used when returning student information", "example": {"created_at": "2023-01-01T12:00:00", "email": "john.doe@u.nus.edu", "full_name": "John Doe", "matric_number": "A12345678Z", "status": "active", "updated_at": "2023-01-01T12:00:00"}}, "StudentStats": {"properties": {"student_id": {"type": "string", "title": "Student Id"}, "student_name": {"type": "string", "title": "Student Name"}, "total_borrows": {"type": "integer", "title": "Total Borrows"}, "active_borrows": {"type": "integer", "title": "Active Borrows"}, "overdue_count": {"type": "integer", "title": "Overdue Count"}}, "type": "object", "required": ["student_id", "student_name", "total_borrows", "active_borrows", "overdue_count"], "title": "StudentStats"}, "StudentUpdate": {"properties": {"matric_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Matric Number", "description": "Matric Number (A + 7 digits + any letter)", "example": "A1234567H"}, "full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name", "description": "Full Name", "example": "John Doe"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "description": "Email", "example": "john.doe@u.nus.edu"}, "telegram_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Telegram Id"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status", "description": "Status", "example": "active"}}, "type": "object", "title": "StudentUpdate", "description": "Model used when updating a student - all fields optional"}, "SubCategoryResponse": {"properties": {"category_id": {"type": "integer", "title": "Category Id"}, "category_name": {"type": "string", "title": "Category Name"}, "category_code": {"type": "string", "title": "Category Code"}}, "type": "object", "required": ["category_id", "category_name", "category_code"], "title": "SubCategoryResponse", "description": "Model for representing subcategories"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}, "tags": [{"name": "Books", "description": "Operations with books"}, {"name": "Book Copies", "description": "Operations with book copies"}, {"name": "Students", "description": "Operations with students"}, {"name": "Borrowing", "description": "Operations with borrowing records"}, {"name": "Metadata", "description": "Operations with metadata (authors, publishers, categories, languages)"}, {"name": "Statistics", "description": "Statistical data and analytics"}, {"name": "Health", "description": "Health check endpoints"}]}